package com.example.demo.controller;

import java.util.List;

import org.springframework.security.core.Authentication;
import org.springframework.security.core.context.SecurityContextHolder;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;

import com.example.demo.DTO.BoardDTO;
import com.example.demo.service.BoardService;
import com.example.demo.DTO.BoardReplyDTO;

@Controller
@RequestMapping("/")
public class BoardController {
	private BoardService boardService;
	
	public BoardController(BoardService boardService) {
		this.boardService = boardService;
	}
	
	//자유게시판 상세보기
		@GetMapping("/freeContent/{idx}")
		public String freeContent(Model model, @PathVariable("idx") Long idx) {
			BoardDTO boardDTO = boardService.getBoardcontent(idx);
			List<BoardReplyDTO> boardReplyDTO = boardService.getBoardReply(idx);
			
			model.addAttribute("freeContent", boardDTO);
			model.addAttribute("boardreply", boardReplyDTO);
			
			return "freeContent";
		}
		
		//자유게시판 리스트getmapping
			@GetMapping("/freeBoard")
			public String freeBoard(Model model, @RequestParam(value="page", defaultValue = "1") Integer pageNum) {
				List<BoardDTO> boardDTO = boardService.getBoardlist(pageNum);
				Integer[] pageList = boardService.getPageList(pageNum);
				model.addAttribute("freeBoard", boardDTO);
				model.addAttribute("pageList", pageList);
				return "freeBoard";
			}
			
		//자유게시판 글쓰기 getmapping
			@GetMapping("/freewrite")
			public String freewrite() {
				return "freewrite";
			}
			
			@PostMapping("/freewrite")
			public String freewrite(BoardDTO boardDto) {
				boardService.Boardwrite(boardDto);
				return "redirect:/freeBoard";
			}
			
			//자유게시판 수정
			@GetMapping("/freemodify/{idx}")
			public String freemodify(Model model, @PathVariable("idx") Long idx) {
				BoardDTO boardDTO = boardService.getBoardcontent(idx);
				model.addAttribute("freemodify", boardDTO);
				return "freemodify";
			}
			
			@PostMapping("/freemodify/{idx}")
			public String freemodify(BoardDTO boardDto, @PathVariable("idx") Long idx) {
				boardService.Boardwrite(boardDto);
				return "redirect:/freeContent/"+idx;
			}
			
			//자유게시판 삭제
			@GetMapping("/freedelete/{idx}")
			public String freedelete(@PathVariable("idx") Long idx) {
				boardService.Boardelete(idx);
				return "redirect:/freeBoard";
			}
			
			//댓글
			@GetMapping("/freeContent/boardReply")
			public String boardReply() {
				return "boardReply";
			}
			
			@PostMapping("/freeContent/boardReply/{no}")
			public String boardReply(BoardReplyDTO boardReplyDTO, @PathVariable("no") Long idx) {
				boardService.BoardReply(boardReplyDTO);
				return "redirect:/freeContent/" + idx;
			}
			
			//댓글 삭제
			@GetMapping("freeContent/{bidx}/replydelete/{idx}")
			public String replydelete(@PathVariable("bidx") Long bidx, @PathVariable("idx") Long idx) {
				boardService.replyelete(idx);
				return "redirect:/freeContent/"+bidx;
			}
			
			//댓글 수정
			@GetMapping("freeContent/{bidx}/replymodify/{idx}")
			public String replymodify(@PathVariable("bidx") Long bidx, @PathVariable("idx") Long idx, Model model) {
				List<BoardReplyDTO> boardreplydto = boardService.getBoardReply(idx);
				
				model.addAttribute("boardreplyDto", boardreplydto);
				return "replymodify";
			}
			
			@PostMapping("freeContent/{bidx}/replymodify/{idx}")
			public String replymodify(@PathVariable("bidx") Long bidx, @PathVariable("idx") Long idx) {
				boardService.replyelete(idx);
				return "redirect:/freeContent/"+bidx;
			}
			
			@GetMapping("/replyEdit")
			public String replyEdit() {
				return "replyEdit";
			}
			
			@PostMapping("/replyEdit")
			public String editReply(BoardReplyDTO boardreplyDTO) {
				
				boardService.editReply(boardreplyDTO);
				return "redirect:/message"
			}
	
}
